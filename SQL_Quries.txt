1)

		SELECT 
			DISTINCT market
		FROM dim_customer
		WHERE customer = 'Atliq Exclusive' AND region = 'APAC'


2) 		

		WITH unique_product_counts AS (
    			SELECT
       				COUNT(DISTINCT p.product_code) AS unique_products_2020
    			FROM
        			dim_product p
    			JOIN
        			fact_sales_monthly s ON p.product_code = s.product_code
    			WHERE
        			fiscal_year = 2020
		),
		unique_product_2021 AS (
    			SELECT
       				COUNT(DISTINCT p.product_code) AS unique_products_2021
    			FROM
     	   			dim_product p
    			JOIN
        			fact_sales_monthly s ON p.product_code = s.product_code
   			WHERE
        		fiscal_year = 2021
		)

		SELECT
    			unique_products_2020,
    			unique_products_2021,
    			((unique_products_2021 - unique_products_2020) / unique_products_2020) * 100 AS percentage_chg
		FROM
    			unique_product_counts, unique_product_2021;


3)

		WITH product_unique AS (
    			SELECT 
        			segment,
        			COUNT(DISTINCT product) AS product_count
    			FROM dim_product
    		GROUP BY segment
		)

		SELECT 
    			segment,
    			product_count
		FROM product_unique
		ORDER BY product_count DESC;


4) 

		WITH product_unique_20 AS (
    			SELECT 
        			segment, 
    	    			COUNT(DISTINCT product) AS product_count_20
    			FROM dim_product p
    			JOIN fact_gross_price s ON p.product_code = s.product_code
    			WHERE fiscal_year = 2020
    			GROUP BY segment
		),

		product_unique_21 AS (
    			SELECT 
        			segment AS segment_21, 
        			COUNT(DISTINCT product) AS product_count_21
    			FROM dim_product p
    			JOIN fact_gross_price s ON p.product_code = s.product_code
    			WHERE fiscal_year = 2021
    			GROUP BY segment
		)

		SELECT 
    			segment, 
    			product_count_20,
    			product_count_21,
    			((product_count_21 - product_count_20) / product_count_20) * 100 AS difference
		FROM product_unique_20
		JOIN product_unique_21 ON segment = segment_21; 


5)

		WITH ranked_costs AS (
    			SELECT
        			p.product_code,
        			p.product,
        			m.manufacturing_cost,
        			RANK() OVER (PARTITION BY p.product_code ORDER BY m.manufacturing_cost) AS cost_rank_asc,
        			RANK() OVER (PARTITION BY p.product_code ORDER BY m.manufacturing_cost DESC) AS cost_rank_desc
    			FROM
        			fact_manufacturing_cost m
    			JOIN
        			dim_product p ON m.product_code = p.product_code
			)

			SELECT
    				product_code,
    				product,
    				manufacturing_cost
			FROM
    				ranked_costs
			WHERE
    				cost_rank_asc = 1 OR cost_rank_desc = 1;

6)

			WITH pre_invoice_discount_pct AS (
    				SELECT 
        				c.customer_code,
        				c.customer,
        				AVG(p.pre_invoice_discount_pct) * 100 AS average_discount_percentage
    				FROM dim_customer c
    				JOIN fact_pre_invoice_deductions p ON p.customer_code = c.customer_code
    				WHERE c.market = 'india' AND p.fiscal_year = 2021
    				GROUP BY c.customer_code, c.customer
				)

				SELECT 
    					* 
				FROM pre_invoice_discount_pct
				ORDER BY average_discount_percentage DESC
				LIMIT 5;

7)			
				WITH gross AS (
    					SELECT 
        					c.customer,
        					s.date,
        					MONTH(s.date) AS months,
        					s.fiscal_year,
        					s.sold_quantity * p.gross_price AS gross_sales
    					FROM 
        					fact_sales_monthly s
    					JOIN 
        					fact_gross_price p ON s.product_code = p.product_code
    					JOIN 
        					dim_customer c ON c.customer_code = s.customer_code
				)

				SELECT 
    					months,
    					fiscal_year,
    					ROUND(SUM(gross_sales) / 1000000, 2) AS gross_sales_amount_mlm
				FROM 
    					gross
				WHERE 
    					customer = 'Atliq Exclusive'
				GROUP BY 
    					months, fiscal_year;


8)

			WITH ttl_sold_quantity AS (
    					SELECT
        					*,
        					CASE
            						WHEN MONTH(date) BETWEEN 9 AND 11 THEN 'Q1'
            						WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
            						WHEN MONTH(date) BETWEEN 3 AND 5 THEN 'Q3'
            						WHEN MONTH(date) BETWEEN 6 AND 8 THEN 'Q4'
        					END AS fiscal_quarter
    						FROM fact_sales_monthly
    						WHERE fiscal_year = 2020
			)

			SELECT 
    				fiscal_quarter,
    				SUM(sold_quantity) AS total_quantity
			FROM 
    				ttl_sold_quantity 
			GROUP BY 
    				fiscal_quarter
			ORDER BY 
    				total_quantity DESC;


9)
			
			WITH gross AS (
    				SELECT 
        				c.channel,
        				SUM((s.sold_quantity * p.gross_price)) / 1000000 AS gross_sales_mlm
    				FROM 
        				fact_sales_monthly s
    				JOIN 
        				fact_gross_price p ON s.product_code = p.product_code
    				JOIN 
        				dim_customer c ON c.customer_code = s.customer_code
    				WHERE 
        				s.fiscal_year = 2021
    				GROUP BY 
        				c.channel
			)

			SELECT 
    				channel,
    				round(gross_sales_mlm) as gross_sales_m,
    				round((gross_sales_mlm / SUM(gross_sales_mlm) OVER ()) * 100) AS percentage
			FROM 
    				gross;

			
10)

			WITH gross AS (
    				SELECT 
       					p.division,
        				p.product_code,
        				p.product,
        				SUM(s.sold_quantity * g.gross_price) AS total_sold_quantity,
        				ROW_NUMBER() OVER (PARTITION BY p.division ORDER BY SUM(s.sold_quantity * g.gross_price) DESC) AS rank_order
    				FROM 
        				fact_sales_monthly s
    				JOIN 
        				fact_gross_price g ON s.product_code = g.product_code
    				JOIN 
        				dim_product p ON p.product_code = s.product_code
    				WHERE 
        				s.fiscal_year = 2021
    				GROUP BY 
        				p.product, p.product_code, p.division
			)

			SELECT 
    				division,
    				product_code,
    				product,
    				total_sold_quantity,
    				rank_order
			FROM 
    				gross
			WHERE 
    				rank_order <= 3;




